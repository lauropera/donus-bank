{
  "openapi": "3.0.0",
  "info": {
    "title": "Donus Bank",
    "description": "Essa é uma API para as funcionalidades do Donus Bank. A autenticação é feita com JWT (JSON Web Token). Para acessar as rotas autenticadas, faça login ou crie um novo usuário para receber o token.",
    "contact": {
      "email": "lauropereirasr01@gmail.com"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3001/",
      "description": "API de teste"
    }
  ],
  "paths": {
    "/auth/login": {
      "post": {
        "summary": "Login",
        "description": "Essa rota é responsável por fazer o login na API.",
        "tags": ["Auth"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              },
              "examples": {
                "login": {
                  "value": {
                    "email": "mallu@artist.com",
                    "password": "sambinhabom"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Dados inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "401": {
            "description": "Credenciais incorretas",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "200": {
            "description": "Login realizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "summary": "Registrar",
        "description": "Essa rota é responsável por fazer um registro na API.",
        "tags": ["Auth"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignUp"
              },
              "examples": {
                "login": {
                  "value": {
                    "name": "Ryan Gosling",
                    "email": "ryan@gosling.com",
                    "cpf": "25910920014",
                    "password": "ryanpass"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Dados inválidos ou problema ao cadastrar o usuário",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "409": {
            "description": "Email ou CPF já cadastrados",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "200": {
            "description": "Registro realizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          }
        }
      }
    },
    "/auth/me": {
      "get": {
        "summary": "Dados do usuário",
        "description": "Essa rota é responsável por trazer dados do usuário logado.",
        "tags": ["Auth"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "400": {
            "description": "Token inválido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "404": {
            "description": "Usuário não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "200": {
            "description": "Usuário encontrado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/all": {
      "get": {
        "summary": "Listar transações",
        "description": "Essa rota é responsável por buscar todas as transações da conta do usuário",
        "tags": ["Transactions"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Traz as transações enviadas (sent) ou recebidas (received). Caso não passado uma especificação, todas as transações são retornadas.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["sent", "received"]
            }
          },
          {
            "name": "starts",
            "in": "query",
            "description": "Data no formato YYYY/MM/DD que aponta a data de início do intervalo do filtro por datas. Caso não passado uma data, as transações de todos os períodos são retornadas.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ends",
            "in": "query",
            "description": "Data no formato YYYY/MM/DD que aponta a data final de transações buscadas. Caso não passado uma data, é considerado a data atual como valor padrão.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Token inválido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "items": {
                    "$ref": "#/components/schemas/Message"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Transações listadas com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Transaction"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transactions/new": {
      "post": {
        "summary": "Fazer transferência",
        "description": "Essa rota é responsável por criar uma transferência bancária, podendo enviar por Email ou CPF.",
        "tags": ["Transactions"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "transferType",
            "in": "query",
            "description": "Tipo de transferência, podendo ser por Email ou CPF.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["email", "cpf"]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignUp"
              },
              "examples": {
                "email": {
                  "value": {
                    "email": "sebastian@sebs.com",
                    "value": 12
                  }
                },
                "cpf": {
                  "value": {
                    "cpf": "49798060318",
                    "value": 10
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Dados inválidos ou problema ao realizar transação",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "404": {
            "description": "A conta destinatária não foi encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "200": {
            "description": "Transação realizada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/deposit": {
      "post": {
        "summary": "Realizar depósito",
        "description": "Essa rota é responsável por fazer um depósito na conta do usuário logado.",
        "tags": ["Transactions"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignUp"
              },
              "examples": {
                "email": {
                  "value": {
                    "email": "sebastian@sebs.com",
                    "value": 12
                  }
                },
                "cpf": {
                  "value": {
                    "cpf": "49798060318",
                    "value": 10
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Dados inválidos ou problema ao realizar depósito",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "404": {
            "description": "A conta não foi encontrada no banco de dados",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "200": {
            "description": "Depósito realizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Login": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "SignUp": {
        "type": "object",
        "required": ["name", "email", "cpf", "password"],
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "cpf": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "Token": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          }
        }
      },
      "Message": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "cpf": {
            "type": "string"
          },
          "account": {
            "type": "object",
            "shape": {
              "id": {
                "type": "number"
              },
              "balance": {
                "type": "number"
              }
            }
          }
        }
      },
      "Transaction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "value": {
            "type": "number"
          },
          "createdAt": {
            "type": "string"
          },
          "ownerAccount": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number"
              },
              "user": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "receiverAccount": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number"
              },
              "user": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "transactionType": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              }
            }
          }
        }
      },
      "Deposit": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
